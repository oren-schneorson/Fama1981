clear; clc

%{
Estimating how expected inflation and excess returns


Data:
1. Qaurterly inflation, seasonally adjusted (SA) percent change in CPI
2. Quarterly per capita real consumption growth:
2.1. SA percent change nominal expenditure on non-durables and services
BI.PCT.C_@DUR.Q_PR
2.2 Population in the workforce



References:



%}


clear; clc
root = mfilename('fullpath');
username = getenv("USER")

if contains(root, 'LiveEditor') || numel(root) == 0
    % in case you're running via LiveEditor, default to root
    root = fullfile('/home', username, 'Documents', 'MATLAB', 'Fama1981');
    
else
    root = fileparts(root);
end

cd(root)

matlab_dir = fullfile('/home', username, 'Documents', 'MATLAB');
lib_data = fullfile('/media', username, 'D', 'data', 'BOI');

addpath(fullfile(matlab_dir, 'altmany-export_fig-410f0ad')
addpath(fullfile(matlab_dir, 'my_functions')


data = struct(...
    'series', {...
    'BI.C_@DUR.Q_FP_SA',...
    'WRK.C.Q_N',...
    'DEM_POP_AVE_CHN.Q',...
    'CPI.Q'},...
    'src', {...
    'BI',...
    'BI',...
    'BI',...
    'FAME' },...
    'VariableNames', cell(1,4)...
    );
    

meta_data = struct;
for src = unique({data.src})
    src = char(src);
    meta_data.(src) = table;
end
    

for i = 1:size(data, 2)
    
    [T_, meta_data_] = load_data(data(i).series, lib_data, data(i).src);
    data(i).VariableNames = T_.Properties.VariableNames(2);
    meta_data.(data(i).src) = [meta_data.(data(i).src); meta_data_];
    
    if ~exist('T', 'var')    
        T = T_;
    else
        T = outerjoin(T, T_, 'Keys', {'date'},...
            'MergeKeys', true);    
    end

end

% to-monthly via interpolation
for i = 1:size(data, 2)-1

    x = T{:, data(i).VariableNames};
    nanx = isnan(x);
    t    = 1:numel(x);
    x(nanx) = interp1(t(~nanx), x(~nanx), t(nanx));
    T{:, data(i).VariableNames} = x;

end

T = T((T.date.Year > 1996),:);
T = T((T.date.Year < 2020),:);
